{
  "address": "0x9eCC37c7C971d4ad1816fC2F49FC73d84b3118F9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAIProcessor",
          "type": "address"
        }
      ],
      "name": "AIProcessorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "premiumWeight",
          "type": "uint256"
        }
      ],
      "name": "MemberJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "ProposalFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aiProcessor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalVotingWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "premiumWeight",
          "type": "uint256"
        }
      ],
      "name": "joinDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "premiumWeight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMember",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumQuorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "totalVotes",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "proposeClaimAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "proposeClaimManual",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAIProcessor",
          "type": "address"
        }
      ],
      "name": "setAIProcessor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "updateProposalFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x941f3adb9577ea9221b0a155b26d466d122b6eb1393e7083dc5bc2fac642299c",
  "receipt": {
    "to": null,
    "from": "0xf503662dA17ED5bB4904c6B789C539CBD8B19fD2",
    "contractAddress": "0x9eCC37c7C971d4ad1816fC2F49FC73d84b3118F9",
    "transactionIndex": 2,
    "gasUsed": "1735832",
    "logsBloom": "0x
    "blockHash": "0x5c4224195a8eb28753c308e92176b13a912e3836e328e9160fd42e1857fd838e",
    "transactionHash": "0x941f3adb9577ea9221b0a155b26d466d122b6eb1393e7083dc5bc2fac642299c",
    "logs": [],
    "blockNumber": 101498614,
    "cumulativeGasUsed": "1812220",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2A2120004Ba5D941724B4653A0c2A74b30691D32"
  ],
  "numDeployments": 1,
  "solcInputHash": "afdc1da7927a35570985964c5e5209c2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAIProcessor\",\"type\":\"address\"}],\"name\":\"AIProcessorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premiumWeight\",\"type\":\"uint256\"}],\"name\":\"MemberJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ProposalFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aiProcessor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVotingWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premiumWeight\",\"type\":\"uint256\"}],\"name\":\"joinDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"premiumWeight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMember\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"totalVotes\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"proposeClaimAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"proposeClaimManual\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAIProcessor\",\"type\":\"address\"}],\"name\":\"setAIProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"updateProposalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO.sol\":\"DAO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IPool {\\r\\n    function approveClaim(uint256 claimId) external;\\r\\n    function rejectClaim(uint256 claimId) external;\\r\\n    function getStakeWeight(address user) external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract DAO {\\r\\n    struct Member {\\r\\n        uint256 premiumWeight; // Voting weight based on premiums paid\\r\\n        bool isMember;\\r\\n    }\\r\\n\\r\\n    struct Proposal {\\r\\n        uint256 claimId;\\r\\n        int256 totalVotes; // Sum of positive (YES) and negative (NO) votes\\r\\n        uint256 endTime;\\r\\n        bool executed;\\r\\n        address proposer; // Address that created the proposal\\r\\n    }\\r\\n\\r\\n    mapping(address => Member) public members; // DAO members\\r\\n    mapping(uint256 => Proposal) public proposals; // Track proposals\\r\\n    uint256 public proposalCounter;\\r\\n    uint256 public minimumQuorum = 20; // Minimum quorum percentage\\r\\n    uint256 public votingDuration = 3 days; // Duration for voting\\r\\n    uint256 public proposalFee = 0.01 ether; // Fee for manually proposing a claim\\r\\n\\r\\n    address public poolContract; // Address of the Insurance Pool contract\\r\\n    address public aiProcessor; // Authorized AI processor address\\r\\n\\r\\n    // Events\\r\\n    event MemberJoined(address indexed member, uint256 premiumWeight);\\r\\n    event ProposalCreated(uint256 indexed proposalId, uint256 claimId, address proposer, uint256 endTime);\\r\\n    event VoteCast(uint256 indexed proposalId, address indexed voter, bool support, uint256 weight);\\r\\n    event ProposalExecuted(uint256 indexed proposalId, bool approved);\\r\\n    event AIProcessorUpdated(address newAIProcessor);\\r\\n    event ProposalFeeUpdated(uint256 newFee);\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyMember() {\\r\\n        require(members[msg.sender].isMember, \\\"Only DAO members can perform this action\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyAIProcessor() {\\r\\n        require(msg.sender == aiProcessor, \\\"Only the AI processor can perform this action\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _poolContract) {\\r\\n        poolContract = _poolContract;\\r\\n        aiProcessor = msg.sender; // Initially set the deployer as the AI processor\\r\\n    }\\r\\n\\r\\n    // Add a member to the DAO\\r\\n    function joinDAO(address member, uint256 premiumWeight) external {\\r\\n        require(!members[member].isMember, \\\"Already a DAO member\\\");\\r\\n        members[member] = Member({ premiumWeight: premiumWeight, isMember: true });\\r\\n        emit MemberJoined(member, premiumWeight);\\r\\n    }\\r\\n\\r\\n    // Propose a claim automatically after AI approval\\r\\n    function proposeClaimAI(uint256 claimId) external onlyAIProcessor {\\r\\n        proposalCounter++;\\r\\n        proposals[proposalCounter] = Proposal({\\r\\n            claimId: claimId,\\r\\n            totalVotes: 0,\\r\\n            endTime: block.timestamp + votingDuration,\\r\\n            executed: false,\\r\\n            proposer: msg.sender\\r\\n        });\\r\\n\\r\\n        emit ProposalCreated(proposalCounter, claimId, msg.sender, block.timestamp + votingDuration);\\r\\n    }\\r\\n\\r\\n    // Propose a claim manually by paying a fee\\r\\n    function proposeClaimManual(uint256 claimId) external payable onlyMember {\\r\\n        require(msg.value == proposalFee, \\\"Incorrect proposal fee\\\");\\r\\n\\r\\n        proposalCounter++;\\r\\n        proposals[proposalCounter] = Proposal({\\r\\n            claimId: claimId,\\r\\n            totalVotes: 0,\\r\\n            endTime: block.timestamp + votingDuration,\\r\\n            executed: false,\\r\\n            proposer: msg.sender\\r\\n        });\\r\\n\\r\\n        emit ProposalCreated(proposalCounter, claimId, msg.sender, block.timestamp + votingDuration);\\r\\n    }\\r\\n\\r\\n    // Vote on a proposal\\r\\n    function vote(uint256 proposalId, bool support) external onlyMember {\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        require(block.timestamp < proposal.endTime, \\\"Voting period has ended\\\");\\r\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\r\\n\\r\\n        uint256 premiumWeight = members[msg.sender].premiumWeight;\\r\\n        uint256 stakeWeight = IPool(poolContract).getStakeWeight(msg.sender);\\r\\n        uint256 totalWeight = premiumWeight + stakeWeight;\\r\\n\\r\\n        // Add or subtract weight based on the vote\\r\\n        if (support) {\\r\\n            proposal.totalVotes += int256(totalWeight);\\r\\n        } else {\\r\\n            proposal.totalVotes -= int256(totalWeight);\\r\\n        }\\r\\n\\r\\n        emit VoteCast(proposalId, msg.sender, support, totalWeight);\\r\\n    }\\r\\n\\r\\n    // Execute the proposal after voting ends\\r\\n    function executeProposal(uint256 proposalId) external {\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        require(block.timestamp >= proposal.endTime, \\\"Voting period not ended\\\");\\r\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\r\\n\\r\\n        // Ensure quorum is met\\r\\n        require(\\r\\n            uint256(proposal.totalVotes > 0 ? proposal.totalVotes : -proposal.totalVotes) >= (getTotalVotingWeight() * minimumQuorum) / 100,\\r\\n            \\\"Quorum not reached\\\"\\r\\n        );\\r\\n\\r\\n        if (proposal.totalVotes > 0) {\\r\\n            // Approve the claim\\r\\n            IPool(poolContract).approveClaim(proposal.claimId);\\r\\n        } else {\\r\\n            // Reject the claim\\r\\n            IPool(poolContract).rejectClaim(proposal.claimId);\\r\\n        }\\r\\n\\r\\n        proposal.executed = true;\\r\\n        emit ProposalExecuted(proposalId, proposal.totalVotes > 0);\\r\\n    }\\r\\n\\r\\n    // Calculate the total voting weight\\r\\n    function getTotalVotingWeight() public view returns (uint256) {\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 1; i <= proposalCounter; i++) {\\r\\n            if (!proposals[i].executed) {\\r\\n                totalWeight += uint256(proposals[i].totalVotes > 0 ? proposals[i].totalVotes : -proposals[i].totalVotes);\\r\\n            }\\r\\n        }\\r\\n        return totalWeight;\\r\\n    }\\r\\n\\r\\n    // Update AI processor address\\r\\n    function setAIProcessor(address newAIProcessor) external onlyAIProcessor {\\r\\n        aiProcessor = newAIProcessor;\\r\\n        emit AIProcessorUpdated(newAIProcessor);\\r\\n    }\\r\\n\\r\\n    // Update proposal fee\\r\\n    function updateProposalFee(uint256 newFee) external onlyAIProcessor {\\r\\n        proposalFee = newFee;\\r\\n        emit ProposalFeeUpdated(newFee);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc5272af1b635454db680c73122eb246825e1ad189f91f05805b33999c1fded6b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260146003556203f480600455662386f26fc100006005553480156200002857600080fd5b5060405162001da938038062001da983398181016040528101906200004e9190620000ee565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000168565b600081519050620000e8816200014e565b92915050565b6000602082840312156200010157600080fd5b60006200011184828501620000d7565b91505092915050565b600062000127826200012e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b62000159816200011a565b81146200016557600080fd5b50565b611c3180620001786000396000f3fe6080604052600436106100f35760003560e01c806335a7f94b1161008a57806388d52ef71161005957806388d52ef71461030e578063c27cabb514610339578063c9d27afe14610364578063cd9431c91461038d576100f3565b806335a7f94b1461027357806368c1b5911461029c5780637b9af306146102b85780638160f0b5146102e3576100f3565b8063132002fc116100c6578063132002fc146101cb5780631776f1d1146101f65780631bd7fbad1461021f57806328ad7cef14610248576100f3565b8063013cf08b146100f857806308ae4b0c146101395780630c0512e9146101775780630d61b519146101a2575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611317565b6103b6565b604051610130959493929190611807565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b91906112b2565b610419565b60405161016e9291906117de565b60405180910390f35b34801561018357600080fd5b5061018c61044a565b604051610199919061178c565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190611317565b610450565b005b3480156101d757600080fd5b506101e061071c565b6040516101ed919061178c565b60405180910390f35b34801561020257600080fd5b5061021d60048036038101906102189190611317565b610722565b005b34801561022b57600080fd5b50610246600480360381019061024191906112b2565b6107f3565b005b34801561025457600080fd5b5061025d6108fe565b60405161026a919061178c565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190611317565b6109c1565b005b6102b660048036038101906102b19190611317565b610ba2565b005b3480156102c457600080fd5b506102cd610dc5565b6040516102da919061162d565b60405180910390f35b3480156102ef57600080fd5b506102f8610deb565b604051610305919061178c565b60405180910390f35b34801561031a57600080fd5b50610323610df1565b604051610330919061162d565b60405180910390f35b34801561034557600080fd5b5061034e610e17565b60405161035b919061178c565b60405180910390f35b34801561037057600080fd5b5061038b60048036038101906103869190611369565b610e1d565b005b34801561039957600080fd5b506103b460048036038101906103af91906112db565b6110fa565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b60025481565b600060016000838152602001908152602001600020905080600201544210156104ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a5906116ac565b60405180910390fd5b8060030160009054906101000a900460ff1615610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f79061168c565b60405180910390fd5b606460035461050d6108fe565b6105179190611986565b6105219190611955565b600082600101541361054057816001015461053b90611b0f565b610546565b81600101545b1015610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906116cc565b60405180910390fd5b60008160010154131561062a57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346e3013582600001546040518263ffffffff1660e01b81526004016105f3919061178c565b600060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050506106bc565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632034110182600001546040518263ffffffff1660e01b8152600401610689919061178c565b600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050505b60018160030160006101000a81548160ff021916908315150217905550817f948f4a9cd986f1118c3fbd459f7a22b23c0693e1ca3ef06a6a8be5aa7d39cc0360008360010154136040516107109190611648565b60405180910390a25050565b60045481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a99061176c565b60405180910390fd5b806005819055507fb2163fea967470e693c56560199ca6bd539b9f4628c38eb790263909078a5d1c816040516107e8919061178c565b60405180910390a150565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a9061176c565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d07703b19498a55b41043677dc0dac1966f9b2d3ed6e3b3b5649a380e366523816040516108f3919061162d565b60405180910390a150565b600080600090506000600190505b60025481116109b9576001600082815260200190815260200160002060030160009054906101000a900460ff166109a657600060016000838152602001908152602001600020600101541361098057600160008281526020019081526020016000206001015461097b90611b0f565b610998565b60016000828152602001908152602001600020600101545b826109a391906118ff565b91505b80806109b190611ac6565b91505061090c565b508091505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a489061176c565b60405180910390fd5b60026000815480929190610a6490611ac6565b91905055506040518060a001604052808281526020016000815260200160045442610a8f91906118ff565b81526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000600254815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506002547f3adb4b5b85d780e775af66d5efff3183afc4c951384c4fe9763eb5e0406b15c6823360045442610b8891906118ff565b604051610b97939291906117a7565b60405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16610c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c279061172c565b60405180910390fd5b6005543414610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b906116ec565b60405180910390fd5b60026000815480929190610c8790611ac6565b91905055506040518060a001604052808281526020016000815260200160045442610cb291906118ff565b81526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000600254815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506002547f3adb4b5b85d780e775af66d5efff3183afc4c951384c4fe9763eb5e0406b15c6823360045442610dab91906118ff565b604051610dba939291906117a7565b60405180910390a250565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea29061172c565b60405180910390fd5b600060016000848152602001908152602001600020905080600201544210610f08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eff9061174c565b60405180910390fd5b8060030160009054906101000a900460ff1615610f5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f519061168c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba69d80d336040518263ffffffff1660e01b8152600401610ffd919061162d565b60206040518083038186803b15801561101557600080fd5b505afa158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d9190611340565b90506000818361105d91906118ff565b905084156110855780846001016000828254611079919061186b565b925050819055506110a1565b8084600101600082825461109991906119e0565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff16867fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e87846040516110ea929190611663565b60405180910390a3505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615611189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111809061170c565b60405180910390fd5b6040518060400160405280828152602001600115158152506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083151502179055509050508173ffffffffffffffffffffffffffffffffffffffff167f7f3b9effe05cfb4f31f854004de03199fd03fe56bf38a48b2aa9a9f4402d6e2382604051611252919061178c565b60405180910390a25050565b60008135905061126d81611bb6565b92915050565b60008135905061128281611bcd565b92915050565b60008135905061129781611be4565b92915050565b6000815190506112ac81611be4565b92915050565b6000602082840312156112c457600080fd5b60006112d28482850161125e565b91505092915050565b600080604083850312156112ee57600080fd5b60006112fc8582860161125e565b925050602061130d85828601611288565b9150509250929050565b60006020828403121561132957600080fd5b600061133784828501611288565b91505092915050565b60006020828403121561135257600080fd5b60006113608482850161129d565b91505092915050565b6000806040838503121561137c57600080fd5b600061138a85828601611288565b925050602061139b85828601611273565b9150509250929050565b6113ae81611a74565b82525050565b6113bd81611a86565b82525050565b6113cc81611a92565b82525050565b60006113df60198361185a565b91507f50726f706f73616c20616c7265616479206578656375746564000000000000006000830152602082019050919050565b600061141f60178361185a565b91507f566f74696e6720706572696f64206e6f7420656e6465640000000000000000006000830152602082019050919050565b600061145f60128361185a565b91507f51756f72756d206e6f74207265616368656400000000000000000000000000006000830152602082019050919050565b600061149f60168361185a565b91507f496e636f72726563742070726f706f73616c20666565000000000000000000006000830152602082019050919050565b60006114df60148361185a565b91507f416c726561647920612044414f206d656d6265720000000000000000000000006000830152602082019050919050565b600061151f60288361185a565b91507f4f6e6c792044414f206d656d626572732063616e20706572666f726d2074686960008301527f7320616374696f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b600061158560178361185a565b91507f566f74696e6720706572696f642068617320656e6465640000000000000000006000830152602082019050919050565b60006115c5602d8361185a565b91507f4f6e6c79207468652041492070726f636573736f722063616e20706572666f7260008301527f6d207468697320616374696f6e000000000000000000000000000000000000006020830152604082019050919050565b61162781611abc565b82525050565b600060208201905061164260008301846113a5565b92915050565b600060208201905061165d60008301846113b4565b92915050565b600060408201905061167860008301856113b4565b611685602083018461161e565b9392505050565b600060208201905081810360008301526116a5816113d2565b9050919050565b600060208201905081810360008301526116c581611412565b9050919050565b600060208201905081810360008301526116e581611452565b9050919050565b6000602082019050818103600083015261170581611492565b9050919050565b60006020820190508181036000830152611725816114d2565b9050919050565b6000602082019050818103600083015261174581611512565b9050919050565b6000602082019050818103600083015261176581611578565b9050919050565b60006020820190508181036000830152611785816115b8565b9050919050565b60006020820190506117a1600083018461161e565b92915050565b60006060820190506117bc600083018661161e565b6117c960208301856113a5565b6117d6604083018461161e565b949350505050565b60006040820190506117f3600083018561161e565b61180060208301846113b4565b9392505050565b600060a08201905061181c600083018861161e565b61182960208301876113c3565b611836604083018661161e565b61184360608301856113b4565b61185060808301846113a5565b9695505050505050565b600082825260208201905092915050565b600061187682611a92565b915061188183611a92565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156118bc576118bb611b58565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156118f4576118f3611b58565b5b828201905092915050565b600061190a82611abc565b915061191583611abc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561194a57611949611b58565b5b828201905092915050565b600061196082611abc565b915061196b83611abc565b92508261197b5761197a611b87565b5b828204905092915050565b600061199182611abc565b915061199c83611abc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119d5576119d4611b58565b5b828202905092915050565b60006119eb82611a92565b91506119f683611a92565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615611a3157611a30611b58565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611a6957611a68611b58565b5b828203905092915050565b6000611a7f82611a9c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ad182611abc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b0457611b03611b58565b5b600182019050919050565b6000611b1a82611a92565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611b4d57611b4c611b58565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611bbf81611a74565b8114611bca57600080fd5b50565b611bd681611a86565b8114611be157600080fd5b50565b611bed81611abc565b8114611bf857600080fd5b5056fea26469706673582212206b3c53e19212f7b2339d043dfc5ff3e3e7a84365ec13f32ba299844a8e36e34d64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c806335a7f94b1161008a57806388d52ef71161005957806388d52ef71461030e578063c27cabb514610339578063c9d27afe14610364578063cd9431c91461038d576100f3565b806335a7f94b1461027357806368c1b5911461029c5780637b9af306146102b85780638160f0b5146102e3576100f3565b8063132002fc116100c6578063132002fc146101cb5780631776f1d1146101f65780631bd7fbad1461021f57806328ad7cef14610248576100f3565b8063013cf08b146100f857806308ae4b0c146101395780630c0512e9146101775780630d61b519146101a2575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611317565b6103b6565b604051610130959493929190611807565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b91906112b2565b610419565b60405161016e9291906117de565b60405180910390f35b34801561018357600080fd5b5061018c61044a565b604051610199919061178c565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190611317565b610450565b005b3480156101d757600080fd5b506101e061071c565b6040516101ed919061178c565b60405180910390f35b34801561020257600080fd5b5061021d60048036038101906102189190611317565b610722565b005b34801561022b57600080fd5b50610246600480360381019061024191906112b2565b6107f3565b005b34801561025457600080fd5b5061025d6108fe565b60405161026a919061178c565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190611317565b6109c1565b005b6102b660048036038101906102b19190611317565b610ba2565b005b3480156102c457600080fd5b506102cd610dc5565b6040516102da919061162d565b60405180910390f35b3480156102ef57600080fd5b506102f8610deb565b604051610305919061178c565b60405180910390f35b34801561031a57600080fd5b50610323610df1565b604051610330919061162d565b60405180910390f35b34801561034557600080fd5b5061034e610e17565b60405161035b919061178c565b60405180910390f35b34801561037057600080fd5b5061038b60048036038101906103869190611369565b610e1d565b005b34801561039957600080fd5b506103b460048036038101906103af91906112db565b6110fa565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b60025481565b600060016000838152602001908152602001600020905080600201544210156104ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a5906116ac565b60405180910390fd5b8060030160009054906101000a900460ff1615610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f79061168c565b60405180910390fd5b606460035461050d6108fe565b6105179190611986565b6105219190611955565b600082600101541361054057816001015461053b90611b0f565b610546565b81600101545b1015610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906116cc565b60405180910390fd5b60008160010154131561062a57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346e3013582600001546040518263ffffffff1660e01b81526004016105f3919061178c565b600060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050506106bc565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632034110182600001546040518263ffffffff1660e01b8152600401610689919061178c565b600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050505b60018160030160006101000a81548160ff021916908315150217905550817f948f4a9cd986f1118c3fbd459f7a22b23c0693e1ca3ef06a6a8be5aa7d39cc0360008360010154136040516107109190611648565b60405180910390a25050565b60045481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a99061176c565b60405180910390fd5b806005819055507fb2163fea967470e693c56560199ca6bd539b9f4628c38eb790263909078a5d1c816040516107e8919061178c565b60405180910390a150565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a9061176c565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d07703b19498a55b41043677dc0dac1966f9b2d3ed6e3b3b5649a380e366523816040516108f3919061162d565b60405180910390a150565b600080600090506000600190505b60025481116109b9576001600082815260200190815260200160002060030160009054906101000a900460ff166109a657600060016000838152602001908152602001600020600101541361098057600160008281526020019081526020016000206001015461097b90611b0f565b610998565b60016000828152602001908152602001600020600101545b826109a391906118ff565b91505b80806109b190611ac6565b91505061090c565b508091505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a489061176c565b60405180910390fd5b60026000815480929190610a6490611ac6565b91905055506040518060a001604052808281526020016000815260200160045442610a8f91906118ff565b81526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000600254815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506002547f3adb4b5b85d780e775af66d5efff3183afc4c951384c4fe9763eb5e0406b15c6823360045442610b8891906118ff565b604051610b97939291906117a7565b60405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16610c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c279061172c565b60405180910390fd5b6005543414610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b906116ec565b60405180910390fd5b60026000815480929190610c8790611ac6565b91905055506040518060a001604052808281526020016000815260200160045442610cb291906118ff565b81526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000600254815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506002547f3adb4b5b85d780e775af66d5efff3183afc4c951384c4fe9763eb5e0406b15c6823360045442610dab91906118ff565b604051610dba939291906117a7565b60405180910390a250565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea29061172c565b60405180910390fd5b600060016000848152602001908152602001600020905080600201544210610f08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eff9061174c565b60405180910390fd5b8060030160009054906101000a900460ff1615610f5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f519061168c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba69d80d336040518263ffffffff1660e01b8152600401610ffd919061162d565b60206040518083038186803b15801561101557600080fd5b505afa158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d9190611340565b90506000818361105d91906118ff565b905084156110855780846001016000828254611079919061186b565b925050819055506110a1565b8084600101600082825461109991906119e0565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff16867fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e87846040516110ea929190611663565b60405180910390a3505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615611189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111809061170c565b60405180910390fd5b6040518060400160405280828152602001600115158152506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083151502179055509050508173ffffffffffffffffffffffffffffffffffffffff167f7f3b9effe05cfb4f31f854004de03199fd03fe56bf38a48b2aa9a9f4402d6e2382604051611252919061178c565b60405180910390a25050565b60008135905061126d81611bb6565b92915050565b60008135905061128281611bcd565b92915050565b60008135905061129781611be4565b92915050565b6000815190506112ac81611be4565b92915050565b6000602082840312156112c457600080fd5b60006112d28482850161125e565b91505092915050565b600080604083850312156112ee57600080fd5b60006112fc8582860161125e565b925050602061130d85828601611288565b9150509250929050565b60006020828403121561132957600080fd5b600061133784828501611288565b91505092915050565b60006020828403121561135257600080fd5b60006113608482850161129d565b91505092915050565b6000806040838503121561137c57600080fd5b600061138a85828601611288565b925050602061139b85828601611273565b9150509250929050565b6113ae81611a74565b82525050565b6113bd81611a86565b82525050565b6113cc81611a92565b82525050565b60006113df60198361185a565b91507f50726f706f73616c20616c7265616479206578656375746564000000000000006000830152602082019050919050565b600061141f60178361185a565b91507f566f74696e6720706572696f64206e6f7420656e6465640000000000000000006000830152602082019050919050565b600061145f60128361185a565b91507f51756f72756d206e6f74207265616368656400000000000000000000000000006000830152602082019050919050565b600061149f60168361185a565b91507f496e636f72726563742070726f706f73616c20666565000000000000000000006000830152602082019050919050565b60006114df60148361185a565b91507f416c726561647920612044414f206d656d6265720000000000000000000000006000830152602082019050919050565b600061151f60288361185a565b91507f4f6e6c792044414f206d656d626572732063616e20706572666f726d2074686960008301527f7320616374696f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b600061158560178361185a565b91507f566f74696e6720706572696f642068617320656e6465640000000000000000006000830152602082019050919050565b60006115c5602d8361185a565b91507f4f6e6c79207468652041492070726f636573736f722063616e20706572666f7260008301527f6d207468697320616374696f6e000000000000000000000000000000000000006020830152604082019050919050565b61162781611abc565b82525050565b600060208201905061164260008301846113a5565b92915050565b600060208201905061165d60008301846113b4565b92915050565b600060408201905061167860008301856113b4565b611685602083018461161e565b9392505050565b600060208201905081810360008301526116a5816113d2565b9050919050565b600060208201905081810360008301526116c581611412565b9050919050565b600060208201905081810360008301526116e581611452565b9050919050565b6000602082019050818103600083015261170581611492565b9050919050565b60006020820190508181036000830152611725816114d2565b9050919050565b6000602082019050818103600083015261174581611512565b9050919050565b6000602082019050818103600083015261176581611578565b9050919050565b60006020820190508181036000830152611785816115b8565b9050919050565b60006020820190506117a1600083018461161e565b92915050565b60006060820190506117bc600083018661161e565b6117c960208301856113a5565b6117d6604083018461161e565b949350505050565b60006040820190506117f3600083018561161e565b61180060208301846113b4565b9392505050565b600060a08201905061181c600083018861161e565b61182960208301876113c3565b611836604083018661161e565b61184360608301856113b4565b61185060808301846113a5565b9695505050505050565b600082825260208201905092915050565b600061187682611a92565b915061188183611a92565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156118bc576118bb611b58565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156118f4576118f3611b58565b5b828201905092915050565b600061190a82611abc565b915061191583611abc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561194a57611949611b58565b5b828201905092915050565b600061196082611abc565b915061196b83611abc565b92508261197b5761197a611b87565b5b828204905092915050565b600061199182611abc565b915061199c83611abc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119d5576119d4611b58565b5b828202905092915050565b60006119eb82611a92565b91506119f683611a92565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615611a3157611a30611b58565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611a6957611a68611b58565b5b828203905092915050565b6000611a7f82611a9c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ad182611abc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b0457611b03611b58565b5b600182019050919050565b6000611b1a82611a92565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611b4d57611b4c611b58565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611bbf81611a74565b8114611bca57600080fd5b50565b611bd681611a86565b8114611be157600080fd5b50565b611bed81611abc565b8114611bf857600080fd5b5056fea26469706673582212206b3c53e19212f7b2339d043dfc5ff3e3e7a84365ec13f32ba299844a8e36e34d64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 40,
        "contract": "contracts/DAO.sol:DAO",
        "label": "members",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Member)24_storage)"
      },
      {
        "astId": 45,
        "contract": "contracts/DAO.sol:DAO",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Proposal)35_storage)"
      },
      {
        "astId": 47,
        "contract": "contracts/DAO.sol:DAO",
        "label": "proposalCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 50,
        "contract": "contracts/DAO.sol:DAO",
        "label": "minimumQuorum",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 53,
        "contract": "contracts/DAO.sol:DAO",
        "label": "votingDuration",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 56,
        "contract": "contracts/DAO.sol:DAO",
        "label": "proposalFee",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 58,
        "contract": "contracts/DAO.sol:DAO",
        "label": "poolContract",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 60,
        "contract": "contracts/DAO.sol:DAO",
        "label": "aiProcessor",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(Member)24_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DAO.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)24_storage"
      },
      "t_mapping(t_uint256,t_struct(Proposal)35_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)35_storage"
      },
      "t_struct(Member)24_storage": {
        "encoding": "inplace",
        "label": "struct DAO.Member",
        "members": [
          {
            "astId": 21,
            "contract": "contracts/DAO.sol:DAO",
            "label": "premiumWeight",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/DAO.sol:DAO",
            "label": "isMember",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Proposal)35_storage": {
        "encoding": "inplace",
        "label": "struct DAO.Proposal",
        "members": [
          {
            "astId": 26,
            "contract": "contracts/DAO.sol:DAO",
            "label": "claimId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/DAO.sol:DAO",
            "label": "totalVotes",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 30,
            "contract": "contracts/DAO.sol:DAO",
            "label": "endTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/DAO.sol:DAO",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 34,
            "contract": "contracts/DAO.sol:DAO",
            "label": "proposer",
            "offset": 1,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}